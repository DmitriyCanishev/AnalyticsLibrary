name: Build and Publish Android Library

on:
  workflow_dispatch:
    inputs:
      buildType:
        description: 'Build Type'
        required: true
        type: choice
        options:
          - Debug
          - Release
      uploadJob:
        description: 'Run Upload All'
        required: true
        default: false
        type: boolean
      customUploadJob:
        description: 'Run Custom Upload'
        required: true
        default: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make Gradle Wrapper Executable
        run: chmod +x ./gradlew

      - name: Build the App with Type - ${{ github.event.inputs.buildType }}
        env:
          STORE_PASS: ${{ secrets.STORE_PASS }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASS: ${{ secrets.KEY_PASS }}
        run: |
          BUILD_TYPE=${{ github.event.inputs.buildType }}
          BUILD_COMMAND="./gradlew clean assemble${BUILD_TYPE}"

          echo "Building with command: $BUILD_COMMAND"
          $BUILD_COMMAND

      - name: Copy AAR and POM artifacts
        run: |
          ./gradlew :analytics:copyAAR${{ github.event.inputs.buildType }}
          ./gradlew :appsflyer_analytics:copyAAR${{ github.event.inputs.buildType }}
          ./gradlew :firebase_analytics:copyAAR${{ github.event.inputs.buildType }}
          ./gradlew :yandex_metrica_analytics:copyAAR${{ github.event.inputs.buildType }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: aar-artifacts
          path: artifacts/

  upload:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event.inputs.uploadJob == 'true' && github.event.inputs.buildType == 'Release' }}
    permissions:
      contents: read
      packages: read

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make Gradle Wrapper Executable
        run: chmod +x ./gradlew

      - name: Download AAR and POM artifacts
        uses: actions/download-artifact@v4
        with:
          name: aar-artifacts
          path: artifacts/

      - name: Display AAR - structure of downloaded files
        run: ls -R
        working-directory: artifacts/

      - name: Publish to GitHub Packages
        env:
          PACKAGE_UPLOAD_USER: ${{ github.actor }}
          PACKAGE_UPLOAD_PASSWORD: ${{ secrets.PACKAGE_TOKEN }}
        run: ./gradlew publish"

  concrete_upload:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event.inputs.customUploadJob == 'true' && github.event.inputs.buildType == 'Release' }}
    permissions:
      contents: read
      packages: read

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make Gradle Wrapper Executable
        run: chmod +x ./gradlew

      - name: Download AAR and POM artifacts
        uses: actions/download-artifact@v4
        with:
          name: aar-artifacts
          path: artifacts/

      - name: Display AAR  - structure of downloaded files
        run: ls -R
        working-directory: artifacts/

      - name: Publish to GitHub Packages
        env:
          PACKAGE_UPLOAD_USER: ${{ github.actor }}
          PACKAGE_UPLOAD_PASSWORD: ${{ secrets.PACKAGE_TOKEN }}
        run: ./gradlew :yandex_metrica_analytics:publish